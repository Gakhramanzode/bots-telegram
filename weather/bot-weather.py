import os
import json
import requests
import logging
import asyncio
from datetime import datetime
from pytz import timezone

# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ Prometheus –∏ telegram
from prometheus_client import start_http_server
import telegram

# ==========================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
# ==========================
logging.basicConfig(
    level=logging.INFO, 
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –°–∫—Ä—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ telegram / httpx, —á—Ç–æ–±—ã –Ω–µ —É—Ç–µ–∫–∞–ª —Ç–æ–∫–µ–Ω
logging.getLogger('httpx').setLevel(logging.WARNING)
logging.getLogger('telegram').setLevel(logging.WARNING)
logging.getLogger('telegram.vendor.ptb_urllib3.urllib3.connectionpool').setLevel(logging.WARNING)

# ==========================
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
# ==========================
TOKEN   = os.environ.get('weather_TOKEN')
CHAT_ID = os.environ.get('weather_CHAT_ID')
API_KEY = os.environ.get('weather_API_KEY')
TIMEZONE_NAME = os.environ.get('weather_TIMEZONE')

CITY_1_LAT = os.environ.get('weather_CITY_1_LAT')
CITY_1_LON = os.environ.get('weather_CITY_1_LON')
CITY_2_LAT = os.environ.get('weather_CITY_2_LAT')
CITY_2_LON = os.environ.get('weather_CITY_2_LON')

# ==========================
# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
# ==========================
bot = telegram.Bot(token=TOKEN)

# ==========================
# –≠–º–æ–¥–∑–∏ –¥–ª—è –∏–∫–æ–Ω–æ–∫ –ø–æ–≥–æ–¥—ã
# ==========================
def get_weather_emoji(icon_code: str) -> str:
    weather_icons = {
        '01d': '‚òÄÔ∏è',   # —è—Å–Ω–æ (–¥–µ–Ω—å)
        '01n': 'üåô',   # —è—Å–Ω–æ (–Ω–æ—á—å)
        '02d': 'üå§Ô∏è',  # –º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ (–¥–µ–Ω—å)
        '02n': '‚òÅÔ∏èüåô', # –º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ (–Ω–æ—á—å)
        '03d': '‚òÅÔ∏è',   # –æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ (–¥–µ–Ω—å)
        '03n': '‚òÅÔ∏è',   # –æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ (–Ω–æ—á—å)
        '04d': '‚òÅÔ∏è',   # –æ–±–ª–∞—á–Ω–æ (–¥–µ–Ω—å)
        '04n': '‚òÅÔ∏è',   # –æ–±–ª–∞—á–Ω–æ (–Ω–æ—á—å)
        '09d': 'üåßÔ∏è',  # –¥–æ–∂–¥—å (–¥–µ–Ω—å)
        '09n': 'üåßÔ∏è',  # –¥–æ–∂–¥—å (–Ω–æ—á—å)
        '10d': 'üå¶Ô∏è',  # –¥–æ–∂–¥—å —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ (–¥–µ–Ω—å)
        '10n': 'üå¶Ô∏è',  # –¥–æ–∂–¥—å —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ (–Ω–æ—á—å)
        '11d': '‚õàÔ∏è',  # –≥—Ä–æ–∑–∞ (–¥–µ–Ω—å)
        '11n': '‚õàÔ∏è',  # –≥—Ä–æ–∑–∞ (–Ω–æ—á—å)
        '13d': '‚ùÑÔ∏è',  # —Å–Ω–µ–≥ (–¥–µ–Ω—å)
        '13n': '‚ùÑÔ∏è',  # —Å–Ω–µ–≥ (–Ω–æ—á—å)
        '50d': 'üå´Ô∏è',  # —Ç—É–º–∞–Ω (–¥–µ–Ω—å)
        '50n': 'üå´Ô∏è',  # —Ç—É–º–∞–Ω (–Ω–æ—á—å)
    }
    return weather_icons.get(icon_code, '')

# ==========================
# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
# ==========================
def get_weather() -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ:
    - "–ü–æ–≥–æ–¥–∞ –Ω–∞ —Ä–∞–π–æ–Ω–µ" (CITY_1_LAT/LON)
    - "–ü–æ–≥–æ–¥–∞ –Ω–∞ –¥–∞—á–µ"   (CITY_2_LAT/LON)
    """
    try:
        # ---- –ì–æ—Ä–æ–¥ 1 ----
        url_1 = (
            f"https://api.openweathermap.org/data/2.5/weather?"
            f"lat={CITY_1_LAT}&lon={CITY_1_LON}&appid={API_KEY}&lang=ru&units=metric"
        )
        response_1 = requests.get(url_1)
        data_1 = json.loads(response_1.text)

        description_1 = data_1['weather'][0]['description'].capitalize()
        icon_1 = get_weather_emoji(data_1['weather'][0]['icon'])
        temp_1 = data_1['main']['temp']
        feels_like_1 = data_1['main']['feels_like']
        wind_speed_1 = data_1['wind']['speed']
        humidity_1 = data_1['main']['humidity']

        # ---- –ì–æ—Ä–æ–¥ 2 ----
        url_2 = (
            f"https://api.openweathermap.org/data/2.5/weather?"
            f"lat={CITY_2_LAT}&lon={CITY_2_LON}&appid={API_KEY}&lang=ru&units=metric"
        )
        response_2 = requests.get(url_2)
        data_2 = json.loads(response_2.text)

        description_2 = data_2['weather'][0]['description'].capitalize()
        icon_2 = get_weather_emoji(data_2['weather'][0]['icon'])
        temp_2 = data_2['main']['temp']
        feels_like_2 = data_2['main']['feels_like']
        wind_speed_2 = data_2['wind']['speed']
        humidity_2 = data_2['main']['humidity']

        message = (
            f"–ü–æ–≥–æ–¥–∞ –Ω–∞ —Ä–∞–π–æ–Ω–µ:\n\n"
            f"{description_1} {icon_1}\n"
            f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_1}¬∞C\n"
            f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like_1}¬∞C\n"
            f"–í–ª–∞–∂–Ω–æ—Å—Ç—å {humidity_1}%\n"
            f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed_1} –º/—Å\n\n"
            f"–ü–æ–≥–æ–¥–∞ –Ω–∞ –¥–∞—á–µ:\n\n"
            f"{description_2} {icon_2}\n"
            f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_2}¬∞C\n"
            f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like_2}¬∞C\n"
            f"–í–ª–∞–∂–Ω–æ—Å—Ç—å {humidity_2}%\n"
            f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed_2} –º/—Å"
        )
        return message

    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã: {e}")
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã"

# ==========================
# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
# ==========================
async def send_message(text: str) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram-—á–∞—Ç
    """
    try:
        await bot.send_message(chat_id=CHAT_ID, text=text)
        logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# ==========================
# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
# ==========================
async def check_time_and_send() -> None:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –∑–∞–¥–∞–Ω–Ω–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ
    –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram, –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –Ω—É–∂–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º:
    03:00, 07:30, 13:30, 17:30, 20:30
    """
    now = datetime.now(timezone(TIMEZONE_NAME))
    current_hour = now.hour
    current_minute = now.minute

    # –°–ø–∏—Å–æ–∫ –Ω—É–∂–Ω—ã—Ö –ø–∞—Ä (—á–∞—Å—ã, –º–∏–Ω—É—Ç—ã)
    scheduled_times = [
        (3, 0),
        (7, 30),
        (13, 30),
        (17, 30),
        (20, 30),
    ]

    if (current_hour, current_minute) in scheduled_times:
        weather_info = get_weather()  # –°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã
        await send_message(weather_info)

# ==========================
# –û—Å–Ω–æ–≤–Ω–æ–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ü–∏–∫–ª
# ==========================
async def main():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç HTTP-—Å–µ—Ä–≤–µ—Ä Prometheus –¥–ª—è –º–µ—Ç—Ä–∏–∫ –Ω–∞ –ø–æ—Ä—Ç—É 57899,
    –∏ –∑–∞—Ç–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram.
    """
    from prometheus_client import start_http_server
    logging.info('Start http server')
    start_http_server(57899)  # –ó–∞–ø—É—Å–∫–∞–µ–º Prometheus –Ω–∞ –æ–¥–Ω–æ–º –ø–æ—Ä—Ç—É –æ–¥–∏–Ω —Ä–∞–∑

    while True:
        await check_time_and_send()
        await asyncio.sleep(60)  # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –ø–∞—É–∑–∞ –≤ 60 —Å–µ–∫—É–Ω–¥

# ==========================
# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
# ==========================
if __name__ == "__main__":
    logging.info('Start bot polling')
    asyncio.run(main())

